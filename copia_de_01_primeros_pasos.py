# -*- coding: utf-8 -*-
"""Copia de 01 - Primeros pasos.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1f2B4UE6NV7tdzxIR2sIvgoYZuitHksp_

## Primeros pasos con Python

_**Workshop:** Masterclass 4.0 --- Ingelearn_

_**Instructor:** Ignacio Lavaggi_

Vamos a dar nuestros primeros pasos con Python, usando ésta herramienta para programar, además de admitir anotaciones: La libreta de Jupyter.

### ¡Hola, Mundo!

Para mostrar cualquier cosa en la consola, o en la parte inferior, podemos usar el comando print, y entre paréntesis poner lo que queremos:
- print("texto")
- print(variable)
- print(f"texto {variable}")
"""

print("Hola Mundo")

"""Tu turno:"""

print("Hola desde Masterclass")

"""### Variables

Las variables son "cajones" en donde podemos almacenar información.
Podemos guardar textos, números, símbolos, o incluso listas o arreglos enteros de valores.

Veamos la forma más simple de declarar una variable:
"""

miVariable = 10

"""¿Qué pasa si imprimimos miVariable?"""

# Rellena con el comando que creas conveniente, por ejemplo:
print("El valor de MiVariable es ",miVariable)

"""Las variables pueden cambiar fácilmente de valor"""

miVariable = 3
otraVariable = 5

"""¿Qué pasa si ahora imprimimos el resultado?"""

# Rellena con el comando que creas conveniente, por ejemplo:
print(otraVariable)

"""Las variables también pueden tener "cuentas" asociadas."""

x = 3
y = 1
ecuacion = x**2 + y
print(f"F(x) = {ecuacion}")

"""### Bibliotecas

Las bibliotecas nos permiten expandir las posibilidades de lo que hace Python, lo único que debemos hacer es "traerlas" a nuestro programa para aprovechar sus funciones
"""

import math
# Math es una biblioteca que tiene funcionalidades bastante
# poderosas para operaciones matemáticas

# Cuánto vale "Pi"?
pi = math.pi

"""Comprobamos si es cierto..."""

print(pi)

"""***
**Ejercicio:**
Calculemos el área de un círculo!




"""

radio = 10
areaCirculo = pi * (radio **2) #rellenar con nuestra ecuación

print(f"El área para un círculo de radio {radio} cm es de {areaCirculo} cm^2")

"""### Listas

Las listas son conjuntos de valores que me permiten almacenar mucha información

Se declaran parecido a una variable, pero cada elemento se separa por una coma, y todo el conjunto se encierra entre corchetes

**Ejemplo:**
miLista = [5,4,3,2,1]
"""

planetas = ["Mercurio","Venus","Tierra","Marte","Júpiter","Saturno","Urano","Neptuno"]

"""Si quiero ver un elemento de la lista, basta con poner el número del elemento entre corchetes.

**Ejemplo:**
miLista[0]

_Nota: En Python, los elementos se cuentan a partir del cero, así que cuando nos referimos a miLista[0], me trae el primer elemento (5)_
"""

# ¿Cuál es el segundo planeta del sistema solar?
print(planetas[0]) #rellenar

"""Python admite números negativos! Si quiero el último elemento de una lista, basta con poner miLista[-1]"""

# ¿Cual es el último planeta del sistema solar?
planetas[-2]

"""El comando "append" nos permite agregar elementos en una lista.

"""

planetas.append("Plutón")

# ¿Cual es el último planeta del sistema solar?
planetas[-1]

"""***
**Ejercicio:**
Ejecutemos el siguiente código. ¿Qué es lo que hace?
"""

x = [-5,-4,-3,-2,-1,0,1,2,3,4,5]
y = 1
fx = [] #lista vacía

for elemento in x:
    fx.append(elemento**3 + y)

print(f"F(x) = {fx}")

"""### Graficar con Python

para graficar rápidamente con python, podemos apoyarnos en la biblioteca MatPlotLib
"""

import matplotlib.pyplot as plt

"""Lo único que necesitamos para graficar, es decirle qué es lo que queremos en el eje X, y en el eje Y"""

plt.plot(
    x, # primero el eje X
    fx, # luego el eje Y
    )

"""Podemos darle estilos y colores con style.use

Aquí hay una lista de estilos:
https://matplotlib.org/stable/gallery/style_sheets/style_sheets_reference.html
"""

plt.style.use("ggplot")
plt.plot(
    x, # primero el eje X
    fx, # luego el eje Y
    )